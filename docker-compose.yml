version: "3.9"

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

  migrate:
    build: .
    command: alembic upgrade head
    volumes:
      - ./app:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  web:
    build: .
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./app:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  celery_worker:
    build: .
    command: celery -A core.celery_app.celery_app worker --loglevel=info
    volumes:
      - ./app:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_started

  celery_beat:
    build: .
    command: celery -A core.celery_app.celery_app beat --loglevel=info
    volumes:
      - ./app:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_started

volumes:
  postgres_data: 